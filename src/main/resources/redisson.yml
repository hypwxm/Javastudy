singleServerConfig:
  idleConnectionTimeout: 10000 # 连接空闲超时，单位：毫秒 10000ms
  pingTimeout: 1000
  connectTimeout: 10000 # 同任何节点建立连接时的等待超时。时间单位是毫秒。 10000ms
  timeout: 3000 # 等待节点回复命令的时间。该时间从命令发送成功时开始计时. 3000ms
  retryAttempts: 3 # 命令失败重试次数. 3
  retryInterval: 1500 # 命令重试发送时间间隔. 1500ms
  # reconnectionTimeout: 3000 # 当与某个节点的连接断开时，等待与其重新建立连接的时间间隔。时间单位是毫秒。 3000ms
  # failedAttempts: 3  # 在某个节点执行相同或不同命令时，连续 失败 failedAttempts（执行失败最大次数） 时，该节点将被从可用节点列表里清除，直到 reconnectionTimeout（重新连接时间间隔） 超时以后再次尝试。  3
  password: null
  subscriptionsPerConnection: 5  # 每个连接的最大订阅数量。
  clientName: null
  address: "redis://127.0.0.1:6379"
  subscriptionConnectionMinimumIdleSize: 1 # 从节点发布和订阅连接的最小空闲连接数
  subscriptionConnectionPoolSize: 50 # 多从节点的环境里，每个 从服务节点里用于发布和订阅连接的连接池最大容量。连接池的连接数量自动弹性伸缩。
  connectionMinimumIdleSize: 32 # 节点的环境里，每个服务节点里用于普通操作（非 发布和订阅）的最小保持连接数（长连接）。长期保持一定数量的连接有利于提高瞬时读取反映速度。
  connectionPoolSize: 64 # 每个服务节点里用于普通操作（非 发布和订阅）连接的连接池最大容量。连接池的连接数量自动弹性伸缩。
  database: 0 # 数据库编号
  # dnsMonitoring: "false" # 在启用该功能以后，Redisson将会监测DNS的变化情况。
  dnsMonitoringInterval: 5000 # 监测DNS的变化情况的时间间隔。
threads: 0 # 这个线程池数量被所有RTopic对象监听器，RRemoteService调用者和RExecutorService任务共同共享。
nettyThreads: 0 # 这个线程池数量是在一个Redisson实例内，被其创建的所有分布式数据类型和服务，以及底层客户端所一同共享的线程池里保存的线程数量。
codec: !<org.redisson.codec.JsonJacksonCodec> {}
transportMode: "NIO"